{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "WCS Cookie Clicker",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "basile.vernouillet@wildcodeschool.fr"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "c-clicker-api.herokuapp.com",
  "tags": [
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/users": {
      "post": {
        "tags": ["user"],
        "summary": "Create a new user",
        "operationId": "createUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": ["user"],
        "summary": "Get user collection",
        "description": "",
        "operationId": "getUsers",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{uuid}": {
      "get": {
        "tags": ["user"],
        "summary": "Get user by user name",
        "description": "",
        "operationId": "getUserByName",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of user. Should be UUID v4",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid uuid supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": ["user"],
        "summary": "Updated user",
        "operationId": "updateUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuidv4"
        },
        "pseudo": {
          "type": "string"
        },
        "score": {
          "type": "number"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UserPost": {
      "type": "object",
      "properties": {
        "pseudo": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
